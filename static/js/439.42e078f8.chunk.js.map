{"version":3,"file":"static/js/439.42e078f8.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","../node_modules/nanoid/index.browser.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/ReductForm/ReductForm.styled.js","components/ReductForm/ReductForm.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","pages/Contacts/Contacts.styled.js","components/ErrorMessage/ErrorMessage.sttyled.js","components/ErrorMessage/ErrorMessage.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;","import styled from 'styled-components';\n\nexport const LabelFilter = styled.label`\n    display: flex;\n    width: 560px;\n    height: 60px;\n    align-items: center;\n    justify-content: space-between;\n`\nexport const FilterInput = styled.input`\n    align-items: center;\n    margin-left: 30px;\n    height: 30px;\n`\nexport const ButtonFilter = styled.button`\n        /* margin-left: 60px; */\n        width: 100px;\n        height: 50px;\n        margin-left: auto;\n        /* margin-right: auto; */\n        border: 5px solid yellowgreen;\n        border-radius: 50%;\n        background-color: green;\n        color: yellowgreen;\n        font-weight: 900;\n        font-size: 16px;\n`\nexport const TextStyled = styled.p`\n    color: #1976d2;\n    font-weight: 500;\n    font-size: 20px;\n`","import React from \"react\";\n\nimport {useDispatch, useSelector } from \"react-redux\";\n\nimport { selectFilter } from \"redux/filter/selectors\";\n\nimport { addFilter, doClear } from \"redux/filter/slice\";\n\nimport { FilterInput, LabelFilter, TextStyled } from \"./Filter.styled\";\n\nimport { Button } from \"@mui/material\";\n\nconst Filter = () => {\n\n    const filter = useSelector(selectFilter);\n\n    const dispatch = useDispatch();\n\n    const doFilter = (event) => {\n        dispatch(addFilter(event.currentTarget.value))\n    };\n\n    return (\n        <LabelFilter>\n            <TextStyled>Пошук за ім'ям:</TextStyled>\n            <FilterInput\n                type=\"text\" value={filter}\n                placeholder=\"введи ім'я\"\n                onChange={doFilter} />\n            <Button\n                color='secondary'\n                variant=\"contained\"\n                type=\"button\"\n                onClick={()=>dispatch(doClear())}\n            >\n                Зітрись!\n            </Button>\n        </LabelFilter>\n    )}\nexport default Filter;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nimport { selectFilter } from \"redux/filter/selectors\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectModalOpen = state => state.contacts.modalOpen;\n\nexport const selectEditForm = state => state.contacts.editForm;\n\nexport const selectEditUser = state => state.contacts.editUser;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectFilter], (item, filter) => {\n    if (!filter) {\n        return item;\n     } else {\n        const normalizedFilter = filter.toLowerCase();\n        const findAbonent = item.filter(({ name, number }) => name.toLowerCase().trim().includes(normalizedFilter) || \n            number.trim().includes(normalizedFilter)); \n         return findAbonent;\n    }\n    }\n)\n\n\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\n    padding: 10px;\n    margin-top: 10px;\n    margin-left: 10px;\n    margin-right: 10px;\n    width: 560px ;\n    height: 560px;\n    overflow: auto;\n`\nexport const ContactListElement= styled.li`\n    display: flex;\n    height: 80px;\n    justify-content: space-between;\n`\nexport const TextStyled = styled.p`\n    color: #1976d2;\n    font-weight: 500;\n    font-size: 20px;\n`\nexport const ButtonElement = styled.button`\n    width: 100px;\n        height: 50px;\n        margin-left: 10px;\n        border: 5px solid yellow;\n        border-radius: 50%;\n        background-color: red;\n        color: gold;\n        font-weight: 900;\n        font-size: 16px;\n`","import React from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectFilteredContacts } from \"redux/contacts/selectors\";\n\nimport { deleteContact } from \"redux/contacts/operations\";\n\nimport { openEditForm } from \"redux/contacts/slice\";\n\nimport { ContactListElement, ContactListStyled, TextStyled } from \"./ContactList.styled\";\n\nimport { Button } from \"@mui/material\";\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n    const filteredContacts = useSelector(selectFilteredContacts);   \n    \n    return (\n        <ContactListStyled>\n            {filteredContacts.map((contact) => {\n                const { id, name, number } = contact;\n                return (\n                    <ContactListElement key={id} id={id}>\n                        <TextStyled>{name}: {number}</TextStyled>\n                        <div>\n                            <Button\n                                mr={3}\n                                variant=\"contained\"\n                                type=\"button\"\n                                onClick={() => dispatch(openEditForm(contact))}\n                            >\n                                 Редагуй!\n                            </Button>\n                            <Button\n                                color='secondary'\n                                variant=\"contained\"\n                                type=\"button\"\n                                onClick={() => dispatch(deleteContact(id))}\n                            >\n                                Видали!\n                            </Button>\n                        </div>\n                    </ContactListElement>\n                )\n            }\n            )}\n        </ContactListStyled>\n    );\n}\n\nexport default ContactList;\n\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n    margin-left: 50px;\n    width: 560px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    /* align-items: center; */\n    background-color: white;\n    border: 3px solid #1976d2;\n    border-radius: 20px;\n`\nexport const Label = styled.label`\n    margin-top: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`\nexport const Input = styled.input`\n    width: 400px;\n    height: 30px;\n    margin-right: 20px;\n`\nexport const ButtonStyled = styled.button`\n    margin-top: 20px;\n    width: 100px;\n    height: 50px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 20px;\n    border: 5px solid yellowgreen;\n    border-radius: 50%;\n    background-color: green;\n    color: yellowgreen;\n    font-weight: 900;\n    font-size: 16px ;\n`\nexport const TextStyled = styled.p`\n    margin-left: 20px;\n    color: #1976d2;\n    font-weight: 500;\n    font-size: 20px;\n`","import React, { useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectContacts } from \"redux/contacts/selectors\";\n\nimport { nanoid } from \"nanoid\";\n\nimport { addContact } from \"redux/contacts/operations\";\n\nimport { FormStyled, Input, Label, TextStyled } from \"./Form.styled\";\n\nimport { Button } from \"@mui/material\";\n\nexport default function Form() {\n    \n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    \n    const nameId = nanoid();\n    const numberId = nanoid();\n\n    function reset() {\n        setName('');\n        setNumber('');        \n    };\n\n    const handleChange = e => {\n\n        const { name, value } = e.currentTarget;\n\n        switch (name) {\n            case \"names\":\n                setName(value);\n                break;\n            case \"number\":\n                setNumber(value);\n                break;\n            default:\n                return;\n        };         \n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        \n        if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase() || contact.number === number)) {\n            const message = `Абонент ${name} чи абонент з номером ${number} вже є в книзі`;\n            alert(message);  \n        }\n        else {             \n            const data = {name, number};\n            dispatch(addContact(data));         \n        }        \n        reset();         \n    }\n    return (        \n        <FormStyled onSubmit={handleSubmit}>\n            <Label htmlFor={nameId}>\n                <TextStyled>Iм'я:</TextStyled>\n                <Input\n                        type=\"text\"\n                        name=\"names\"\n                        id={nameId}\n                        value={name}\n                        onChange={handleChange}\n                        placeholder=\"введи ім'я\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                />\n            </Label>\n            <Label htmlFor={numberId}>\n                <TextStyled>Номер:</TextStyled>\n                <Input\n                        type=\"tel\"\n                        name=\"number\"\n                        value={number}\n                        id={numberId}\n                        onChange={handleChange}\n                        placeholder=\"введи номер телефону\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                />\n            </Label>\n            <Button\n                style={{ width: \"100px\", marginLeft: \"auto\", marginRight: \"auto\", marginBottom: \"20px\" }}\n                variant=\"contained\" type=\"submit\">Запиши!</Button>\n        </FormStyled>             \n        );\n    \n}\n","import styled from 'styled-components';\n\nexport const ReductFormStyled = styled.form`\n    margin-left: 50px;\n    width: 560px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    background-color: beige;\n    border: 3px solid #9c27b0;\n    border-radius: 20px;\n`\nexport const Label = styled.label`\n    margin-top: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`\nexport const Input = styled.input`\n    width: 400px;\n    height: 30px;\n    margin-right: 20px;\n`\nexport const ButtonStyled = styled.button`\n    margin-top: 20px;\n    width: 100px;\n    height: 50px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 20px;\n    border: 5px solid yellowgreen;\n    border-radius: 50%;\n    background-color: green;\n    color: yellowgreen;\n    font-weight: 900;\n    font-size: 16px ;\n`\nexport const TextStyled = styled.p`\n    margin-left: 20px;\n    color: #9c27b0;\n    font-weight: 500;\n    font-size: 20px;\n`","import React, { useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectContacts, selectEditUser } from \"redux/contacts/selectors\";\n\nimport { nanoid } from \"nanoid\";\n\nimport {editContact} from \"redux/contacts/operations\";\n\nimport { Input, Label, ReductFormStyled, TextStyled } from \"./ReductForm.styled\";\n\nimport { Button } from \"@mui/material\";\n\nexport default function RedactForm() {\n    \n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const currentUser = useSelector(selectEditUser);\n\n    const [name, setName] = useState(currentUser.name);\n    const [number, setNumber] = useState(currentUser.number);\n    \n    const nameId = nanoid();\n    const numberId = nanoid();\n\n    const handleChange = e => {\n\n        const { name, value } = e.currentTarget;\n\n        switch (name) {\n            case \"names\":\n                setName(value);\n                break;\n            case \"number\":\n                setNumber(value);\n                break;\n            default:\n                return;\n        };          \n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const id = currentUser.id;\n        const data = { name, number, id, };\n        \n        if (contacts.find(contact => ( contact.id !== id ) &&( contact.name.toLowerCase() === name.toLowerCase() || contact.number === number))) {\n            const message = `Такий абонент вже є в книзі`;\n            alert(message);  \n        }\n        else { \n            dispatch(editContact(data));         \n        }           \n    }\n    return (    \n        <ReductFormStyled onSubmit={handleSubmit}>\n            <Label htmlFor={nameId}>\n                <TextStyled>Iм'я:</TextStyled>\n                <Input\n                        type=\"text\"\n                        name=\"names\"\n                        id={nameId}\n                        value={name}\n                        onChange={handleChange}\n                        placeholder={`${currentUser.name} ??`}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                />\n            </Label>\n            <Label htmlFor={numberId}>\n                <TextStyled>Номер:</TextStyled>\n                <Input\n                        type=\"tel\"\n                        name=\"number\"\n                        value={number}\n                        id={numberId}\n                        onChange={handleChange}\n                        placeholder={`${currentUser.number} ??`}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                \n                />\n            </Label>\n            <Button\n                style={{ width: \"100px\", marginLeft: \"auto\", marginRight: \"auto\", marginBottom: \"20px\" }}\n                variant=\"contained\" type=\"submit\">Запиши!</Button>\n        </ReductFormStyled>           \n        );\n    \n}\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1200;\n`\nexport const ModalStyled = styled.div`\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n`","import React, { useEffect } from \"react\";\n\nimport { createPortal } from \"react-dom\";\n\nimport { selectEditForm, selectModalOpen } from \"redux/contacts/selectors\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Form from \"components/Form/Form\";\n\nimport ReductForm from \"components/ReductForm/ReductForm\";\n\nimport { closeModal } from \"redux/contacts/slice\";\n\nimport { ModalStyled, Overlay } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = () => {\n    const isModalOpen = useSelector(selectModalOpen);\n    const editForm = useSelector(selectEditForm);\n    const dispatch = useDispatch();\n\n     useEffect(() => {        \n        const handleKeyDown = event => {        \n            if (event.code === 'Escape') {                \n                dispatch(closeModal());\n            }\n        }\n        window.addEventListener('keydown', handleKeyDown);\n        return () => window.removeEventListener('keydown', handleKeyDown);\n    },[dispatch])\n\n    const handleBackdropClick = e => {\n        if (e.currentTarget === e.target) {\n            dispatch(closeModal());\n        }\n    }\n\n    return createPortal(\n        <Overlay onClick={handleBackdropClick}>\n            <ModalStyled>\n                <div>{(isModalOpen && editForm) ? <ReductForm/> : <Form/> }</div>  \n            </ModalStyled>            \n        </Overlay>,\n        modalRoot\n    );\n}\n\n\n\nexport default Modal;","import styled from 'styled-components';\n\nexport const ContactsStyled = styled.div`\n    margin-top: 100px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\nexport const ContactsHeder = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 560px;\n`\nexport const SecondTittle = styled.h2`\n    color: #1976d2;\n`\nexport const ButtonAddContact = styled.button`\n width: 100px;\n height: 50px;\n margin-left: auto;\n /* margin-right: auto; */\n border: 5px solid yellowgreen;\n border-radius: 50%;\n background-color: green;\n color: yellowgreen;\n font-weight: 900;\n font-size: 16px;\n`","import styled from 'styled-components';\n\nexport const ErrorStyled = styled.p`\n    padding: 10px;\n    color: red;\n    font-weight: 500;\n    font-size: 20px;\n`","import { useSelector } from \"react-redux\";\n\nimport { selectError } from \"redux/contacts/selectors\";\n\nimport { ErrorStyled } from \"./ErrorMessage.sttyled\";\n\nexport const ErrorMessage = () => {\n\n    const isError = useSelector(selectError);\n\n    return (\n        <ErrorStyled>{ isError}</ErrorStyled> \n    )\n}","import { useDispatch, useSelector } from \"react-redux\";\n\nimport Filter from \"components/Filter/Filter\";\n\nimport ContactList from \"components/ContactList/ContactList\";\n\nimport Loader from \"components/Loader/Loader\";\n\nimport Modal from \"components/Modal/Modal\";\n\nimport { selectError, selectIsLoading, selectModalOpen } from \"redux/contacts/selectors\";\n\nimport { useEffect } from \"react\";\n\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nimport { openForm } from \"redux/contacts/slice\";\n\nimport {ContactsHeder, ContactsStyled, SecondTittle} from \"./Contacts.styled\";\n\nimport { ErrorMessage } from \"components/ErrorMessage/ErrorMessage\";\n\nimport { Button } from \"@mui/material\";\n\nconst Contacts = () => {\n    const isModalOpen = useSelector(selectModalOpen);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n    dispatch(fetchContacts());\n    }, [dispatch])\n    return (\n        <ContactsStyled>\n            <Filter />\n            <ContactsHeder>\n                <SecondTittle>Контакти</SecondTittle>\n                <Button\n                     variant=\"contained\"\n                    type=\"button\"\n                    onClick={() => dispatch(openForm())}\n                >\n                    Додай!\n                </Button>\n            </ContactsHeder>\n            {(isLoading && !error && <Loader />) || (error && <ErrorMessage/>\n            ) || <ContactList />} \n            {isModalOpen && <Modal />}\n        </ContactsStyled>\n    )\n}\n\nexport default Contacts;"],"names":["selectFilter","state","filter","LabelFilter","styled","FilterInput","TextStyled","useSelector","dispatch","useDispatch","type","value","placeholder","onChange","event","addFilter","currentTarget","Button","color","variant","onClick","doClear","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectModalOpen","modalOpen","selectEditForm","editForm","selectEditUser","editUser","selectFilteredContacts","item","normalizedFilter","toLowerCase","number","trim","includes","ContactListStyled","ContactListElement","filteredContacts","contact","id","mr","openEditForm","deleteContact","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","FormStyled","Label","Input","Form","useState","setName","setNumber","nameId","numberId","handleChange","e","onSubmit","preventDefault","message","alert","data","addContact","htmlFor","pattern","title","required","style","width","marginLeft","marginRight","marginBottom","ReductFormStyled","RedactForm","currentUser","editContact","Overlay","ModalStyled","modalRoot","document","querySelector","isModalOpen","useEffect","handleKeyDown","code","closeModal","window","addEventListener","removeEventListener","createPortal","target","ContactsStyled","ContactsHeder","SecondTittle","ErrorStyled","ErrorMessage","isError","fetchContacts","openForm","Loader"],"sourceRoot":""}